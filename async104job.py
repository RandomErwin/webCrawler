# -*- coding: utf-8 -*-
"""async104job.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bCHSmpZl5OChl3v_N2Skgcm6On0q-sOy
"""

# !pip3 install aiohttp
# !pip3 install nest_asyncio

import asyncio
import aiohttp
import requests
from bs4 import BeautifulSoup
import nest_asyncio
from aiohttp import ClientSession

nest_asyncio.apply()

async def main():
  links = []
  for page in range(1, 20):
    url =f'https://www.104.com.tw/jobs/search/?ro=0&isnew=30&kwop=7&keyword=Python&expansionType=area%2Cspec%2Ccom%2Cjob%2Cwf%2Cwktm&area=6001008000&order=15&asc=0&page={page}&mode=s&jobsource=2018indexpoc&langFlag=0&langStatus=0&recommendJob=1&hotJob=1'
    links.append(url)

  async with ClientSession() as session:
    tasks = [asyncio.create_task(fetch(link, session)) for link in links]
    await asyncio.gather(*tasks)

async def fetch(link, session):
  async with session.get(link) as response:
    html = await response.text()
    soup = BeautifulSoup(html, 'lxml')
    blocks = soup.find_all('div', {'class': "b-block__left"})

    for block in blocks:
      job = block.find('a', {'class': "js-job-link"})
      if job is None:
        continue

      company = block.find_all('li')[1] 
      # content = block.find('p', {'class': "job-list-item__info  b-clearfix b-content"})
      salary_ = block.find('a', {'class': "b-tag--default"})
      salary = block.find('span', {'class': "b-tag--default"})
      

      print((job.text, ) + (company.getText().strip(),))
      # if content is None:
      #   print(content)
      # else:
      #   print("No elements")
      if salary is None:
        print(salary_.text)
      else:
        print(salary.text)

loop = asyncio.get_event_loop()
loop.run_until_complete(main())

